filter {
  if ![delete_flag] {
    ruby { code => 'event.set("task_id", event.get("rownum") / 10)' } # 10件毎に同じ値を採番する
    aggregate {
      task_id => "%{task_id}"
      code => ' map["ids"] ||= [];
                map["ids"].push("\"" + event.get("id") + "\"");
                event.cancel();'
      timeout => 1 # 1 秒でタイムアウト
      push_map_as_event_on_timeout => true
    }
    http {
      url => "${CALL_INFORMATIONS_DOCUMENT_API_URI}"
      verb => "POST"
      headers => { "Content-Type" => "application/json"
                    "x-api-key" => "${LOGSTASH_API_KEY}" }
      body => '{ "ids": [%{ids}] }'
      body_format => "json"
    }
    split {
      field => "[body][items]"
      target => "result"
    }
    mutate {
      remove_field => ["headers", "@timestamp", "@version","updated_at", "body", "ids", "idsString"]
    }
    ruby {
        code => "
          event.get('result').each {|k, v|
              event.set(k , v)
          }
          event.remove('result')
        "
    }
    ruby {
      code => "
        event.set('[joinField][name]', 'callInformations') # joinField.name
        "
    }
  }
}


