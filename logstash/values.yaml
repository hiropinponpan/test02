---
replicas: 1

# Allows you to add any config files in /usr/share/logstash/config/
# such as logstash.yml and log4j2.properties
#
# Note that when overriding logstash.yml, `http.host: 0.0.0.0` should always be included
# to make default probes work.
logstashConfig:
  logstash.yml: |
    http.host: 0.0.0.0
    xpack.monitoring.enabled: true
    xpack.monitoring.elasticsearch.username: elastic
    xpack.monitoring.elasticsearch.password: 3cvcXxCw
    xpack.monitoring.elasticsearch.hosts: http://elasticsearch-master:9200
    config.reload.automatic: true
    config.reload.interval: 10
    queue.type: persisted
    path.data: /usr/share/logstash
  pipelines.yml: |
    - pipeline.id: db_call-informations-es_call-informations
      path.config: "/usr/share/logstash/data/pipeline/{\
                    00_input_db_call_informations,\
                    10_filter_call_informations_id-es_call-informations,\
                    20_output_es-call-informations}.conf"
      pipeline.workers: 1
    - pipeline.id: db_call-informations-es_call-informations-for-updated-by-batch
      path.config: "/usr/share/logstash/data/pipeline/{\
                    00_input_db_call_informations-for-updated-by-batch,\
                    10_filter_call_informations_id-es_call-informations,\
                    20_output_es-call-informations}.conf"
      pipeline.workers: 1
    - pipeline.id: db_call-informations-es_call-informations-all-data
      path.config: "/usr/share/logstash/data/pipeline/{\
                    00_input_db_call_informations-for-all-data,\
                    10_filter_call_informations_id-es_call-informations,\
                    20_output_es-call-informations}.conf"
      pipeline.workers: 1
    - pipeline.id: db_keyman_lists-es_call-informations
      path.config: "/usr/share/logstash/data/pipeline/{\
                    00_input_db_keyman_lists,\
                    10_filter_call_informations_id-es_call-informations,\
                    20_output_es-call-informations}.conf"
      pipeline.workers: 1
    - pipeline.id: db_keyman_lists-es_call-informations-for-updated-by-batch
      path.config: "/usr/share/logstash/data/pipeline/{\
                    00_input_db_keyman_lists-long-for-updated-by-batch,\
                    10_filter_call_informations_id-es_call-informations,\
                    20_output_es-call-informations}.conf"
      pipeline.workers: 1
    - pipeline.id: db_phone_sales_report_histories-es_call-informations_phone_sales_report_histories
      path.config: "/usr/share/logstash/data/pipeline/{\
                    00_input_db_phone_sales_report_histories,\
                    10_filter_phone_sales_report_histories-es_call-informations_phone_sales_report_histories,\
                    20_output_es-call-informations-phone-sales-report-histories}.conf"
    - pipeline.id: db_phone_sales_report_histories-es_call-informations_phone_sales_report_histories-for-updated-by-batch
      path.config: "/usr/share/logstash/data/pipeline/{\
                    00_input_db_phone_sales_report_histories-for-updated-by-batch,\
                    10_filter_phone_sales_report_histories-es_call-informations_phone_sales_report_histories,\
                    20_output_es-call-informations-phone-sales-report-histories}.conf"
    - pipeline.id: db_phone_sales_report_histories-es_call-informations_phone_sales_report_histories-for-all-data
      path.config: "/usr/share/logstash/data/pipeline/{\
                    00_input_db_phone_sales_report_histories-for-all-data,\
                    10_filter_phone_sales_report_histories-es_call-informations_phone_sales_report_histories,\
                    20_output_es-call-informations-phone-sales-report-histories}.conf"
# Allows you to add any pipeline files in /usr/share/logstash/pipeline/
### ***warn*** there is a hardcoded logstash.conf in the image, override it first
logstashPipeline: {}
#  db_call_informations-es_call-informations.conf: |
#    input{}
#    ouput{}
#  db_keyman_lists-es_call-informations.conf: |
#    input{}
#    ouput{}
#  db_phone_sales_report_histories-es_call-informations_phone_sales_report_histories.conf: |
#    input{}
#    ouput{}
    
# Allows you to add any pattern files in your custom pattern dir
logstashPatternDir: "/usr/share/logstash/patterns/"
logstashPattern: {}
#    pattern.conf: |
#      DPKG_VERSION [-+~<>\.0-9a-zA-Z]+

# Extra environment variables to append to this nodeGroup
# This will be appended to the current 'env:' key. You can use any of the kubernetes env
# syntax here
extraEnvs:
#  - name: MY_ENVIRONMENT_VAR
#    value: the_value_goes_here
  - name: POSTGRES_USERNAME
    value: "implelas"
  - name: POSTGRES_PASSWORD
    value: "HkeCBeU7qNUq"
  - name: POSTGRES_HOST
    # value: "172.23.55.62:5432"
    # value: "10.201.130.202:5432"
    value: "10.201.130.197:5432"
  - name: POSTGRES_DB
    value: "callimpl"
  - name: CALL_INFORMATIONS_DOCUMENT_API_URI
    value: "http://call-impl-plan-star-backend-es/api/callimplplan/call_information/:es"
  - name: LOGSTASH_API_KEY
    value: "a7BtuWhrnchZ"
  - name: ELASTICSEARCH_HOST
    value: "http://elasticsearch-master:9200"
  - name: ELASTICSEARCH_USERNAME
    value: "logstash_app"
  - name: ELASTICSEARCH_PASSWORD
    value: "yWSFbgTj"
  - name: CALL_INFORMATIONS_INDEX
    value: "call-informations-v1"

# Allows you to load environment variables from kubernetes secret or config map
envFrom: []
# - secretRef:
#     name: env-secret
# - configMapRef:
#     name: config-map

# Add sensitive data to k8s secrets
secrets: []
#  - name: "env"
#    value:
#      ELASTICSEARCH_PASSWORD: "LS1CRUdJTiBgUFJJVkFURSB"
#      api_key: ui2CsdUadTiBasRJRkl9tvNnw
#  - name: "tls"
#    value:
#      ca.crt: |
#        LS0tLS1CRUdJT0K
#        LS0tLS1CRUdJT0K
#        LS0tLS1CRUdJT0K
#        LS0tLS1CRUdJT0K
#      cert.crt: "LS0tLS1CRUdJTiBlRJRklDQVRFLS0tLS0K"
#      cert.key.filepath: "secrets.crt" # The path to file should be relative to the `values.yaml` file.

# A list of secrets and their paths to mount inside the pod
secretMounts: []

hostAliases: []
#- ip: "127.0.0.1"
#  hostnames:
#  - "foo.local"
#  - "bar.local"

image: "promspksharbor.in.staffservice.co.jp/library/logstash-plugins-all"
imageTag: "7.14.1"
imagePullPolicy: "IfNotPresent"
imagePullSecrets: []

podAnnotations: {}

# additionals labels
labels: {}

logstashJavaOpts: "-Xmx6g -Xms6g"

resources:
  requests:
    cpu: "2000m"
    memory: "3Gi"
  limits:
    cpu: "4000m"
    memory: "8Gi"

volumeClaimTemplate:  
  accessModes: ["ReadWriteOnce"]
  storageClassName: "csi"
  resources:
    requests:
      storage: 3Gi

rbac:
  create: false
  serviceAccountAnnotations: {}
  serviceAccountName: ""
  annotations:
    {}
    #annotation1: "value1"
    #annotation2: "value2"
    #annotation3: "value3"

podSecurityPolicy:
  create: false
  name: ""
  spec:
    privileged: false
    fsGroup:
      rule: RunAsAny
    runAsUser:
      rule: RunAsAny
    seLinux:
      rule: RunAsAny
    supplementalGroups:
      rule: RunAsAny
    volumes:
      - secret
      - configMap
      - persistentVolumeClaim

persistence:
  enabled: true
  annotations: {}

# volumeMounts:
#  - name: logstash-data
#    mountPath: /usr/share/logstash

volumes: ""
  # - name: pipeline
  #   emptyDir: {}
  # - name: jdbc-last-run
  #   emptyDir: {}

extraVolumes: ""
  # - name: "jdbc-last-run"
  #   emptyDir: {}

extraVolumeMounts: ""
  # - name: "jdbc-last-run"
  #  mountPath: "/usr/share/logstash/data/jdbc_last_run/"

extraContainers:
  ""
  # - name: do-something
  #   image: busybox
  #   command: ['do', 'something']

extraInitContainers:
  ""
  # - name: do-something
  #   image: busybox
  #   command: ['do', 'something']

# This is the PriorityClass settings as defined in
# https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
priorityClassName: ""

# By default this will make sure two pods don't end up on the same node
# Changing this to a region would allow you to spread pods across regions
antiAffinityTopologyKey: "kubernetes.io/hostname"

# Hard means that by default pods will only be scheduled if there are enough nodes for them
# and that they will never end up on the same node. Setting this to soft will do this "best effort"
antiAffinity: "hard"

# This is the node affinity settings as defined in
# https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
nodeAffinity: {}

# This is inter-pod affinity settings as defined in
# https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
podAffinity: {}

# The default is to deploy all pods serially. By setting this to parallel all pods are started at
# the same time when bootstrapping the cluster
podManagementPolicy: "Parallel"

httpPort: 9600

# Custom ports to add to logstash
extraPorts:
  []
  # - name: beats
  #   containerPort: 5001

updateStrategy: RollingUpdate

# This is the max unavailable setting for the pod disruption budget
# The default value of 1 will make sure that kubernetes won't allow more than 1
# of your pods to be unavailable during maintenance
maxUnavailable: 1

podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000

securityContext:
  capabilities:
    drop:
      - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# How long to wait for logstash to stop gracefully
terminationGracePeriod: 120

# Probes
# Default probes are using `httpGet` which requires that `http.host: 0.0.0.0` is part of
# `logstash.yml`. If needed probes can be disabled or overrided using the following syntaxes:
#
# disable livenessProbe
# livenessProbe: null
#
# replace httpGet default readinessProbe by some exec probe
# readinessProbe:
#   httpGet: null
#   exec:
#     command:
#       - curl
#      - localhost:9600

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 300
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 3

## Use an alternate scheduler.
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""

nodeSelector: {}
tolerations: []

nameOverride: ""
fullnameOverride: ""

lifecycle:
  {}
  # preStop:
  #   exec:
  #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
  # postStart:
  #   exec:
  #     command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

service: {}
#  annotations: {}
#  type: ClusterIP
#  loadBalancerIP: ""
#  ports:
#    - name: beats
#      port: 5044
#      protocol: TCP
#      targetPort: 5044
#    - name: http
#      port: 8080
#      protocol: TCP
#      targetPort: 8080

ingress:
  enabled: false
#  annotations: {}
#  hosts:
#    - host: logstash.local
#      paths:
#        - path: /logs
#          servicePort: 8080
#  tls: []
